{"version":3,"sources":["Demo.js","install_metamask.js","nav.js","package/index.js","index.js"],"names":["address","ethUtil","require","web3","window","networkToRPCURI","1","3","4","42","50","msg","bufferToHex","Buffer","Demo","props","_this","Object","C_Users_paulg_Documents_polats_react_web3_auth_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Users_paulg_Documents_polats_react_web3_auth_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_paulg_Documents_polats_react_web3_auth_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","handleSignature","bind","C_Users_paulg_Documents_polats_react_web3_auth_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","web3Login","initializeWeb3Async","injectedProviderIfExists","ethereum","_","enable","console","log","_context","t0","injectedWeb3IfExists","currentProvider","undefined","Web3Wrapper","getNetworkIdAsync","networkId","signerProvider","isMetaMask","isToshi","MetamaskSubprovider","SignerSubprovider","provider","Web3ProviderEngine","addProvider","RPCSubprovider","start","web3Wrapper","contractWrappers","ContractWrappers","exchange","abi","erc20Token","etherToken","forwarder","abiDecoder","addABI","setState","err","signed","fetchOpts","method","headers","Content-Type","body","JSON","stringify","fetch","then","res","status","json","Error","statusText","catch","eth","accounts","personal","sign","state","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","style","paddingLeft","paddingRight","paddingBottom","_nav__WEBPACK_IMPORTED_MODULE_14__","bloomer__WEBPACK_IMPORTED_MODULE_12__","className","onClick","_install_metamask__WEBPACK_IMPORTED_MODULE_13__","ComponentWithReactWeb3Auth","InstallMetamask","_React$Component","C_Users_paulg_Documents_polats_react_web3_auth_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_paulg_Documents_polats_react_web3_auth_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_paulg_Documents_polats_react_web3_auth_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","C_Users_paulg_Documents_polats_react_web3_auth_client_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_paulg_Documents_polats_react_web3_auth_client_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","react__WEBPACK_IMPORTED_MODULE_5__","href","target","rel","title","src","width","alt","React","Network","networkIdToNetwork","Nav","fetchNetworkDetailsAsync","C_Users_paulg_Documents_polats_react_web3_auth_client_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","C_Users_paulg_Documents_polats_react_web3_auth_client_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","_fetchNetworkDetailsAsync","C_Users_paulg_Documents_polats_react_web3_auth_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_paulg_Documents_polats_react_web3_auth_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","prev","next","sent","stop","networkName","react__WEBPACK_IMPORTED_MODULE_8__","bloomer__WEBPACK_IMPORTED_MODULE_7__","isColor","networkRender","renderNetworkIndicator","zIndex","constructor","name","Component","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_Demo__WEBPACK_IMPORTED_MODULE_2__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af07b8fd.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { ContractWrappers, MetamaskSubprovider, RPCSubprovider, Web3ProviderEngine } from '0x.js';\nimport { Web3Wrapper } from '@0x/web3-wrapper';\nimport { SignerSubprovider } from '@0x/subproviders';\nimport { Content, Footer } from 'bloomer';\nimport { InstallMetamask } from './install_metamask';\nimport { Nav } from './nav';\n\nimport * as _ from 'lodash';\n\n// import ComponentWithReactWeb3Auth from 'react-web3-auth'; // replace './package' with package name when using via npm install\nimport ComponentWithReactWeb3Auth from './package';\n\nconst ethUtil = require('ethereumjs-util');\nconst web3 = window.web3;\n\nconst networkToRPCURI = {\n    1: 'https://mainnet.infura.io',\n    3: 'https://ropsten.infura.io',\n    4: 'https://rinkeby.infura.io',\n    42: 'https://kovan.infura.io',\n    50: 'http://localhost:8545',\n};\n\n\n// The contents of the message can be anything\nconst rawMessage = 'Some message';\nconst msg = ethUtil.bufferToHex(new Buffer(rawMessage, 'utf8'));\nvar address;\n\nclass Demo extends ComponentWithReactWeb3Auth {\n  constructor(props) {\n    super(props);\n\n    this.handleSignature = this.handleSignature.bind(this);\n    this.web3Login = this.web3Login.bind(this);\n\n    this.initializeWeb3Async();\n  }\n\n  async initializeWeb3Async() {\n      let injectedProviderIfExists = window.ethereum;\n      if (!_.isUndefined(injectedProviderIfExists)) {\n          if (!_.isUndefined(injectedProviderIfExists.enable)) {\n              try {\n                  await injectedProviderIfExists.enable();\n              } catch (err) {\n                  console.log(err);\n              }\n          }\n      } else {\n          const injectedWeb3IfExists = window.web3;\n          if (!_.isUndefined(injectedWeb3IfExists) && !_.isUndefined(injectedWeb3IfExists.currentProvider)) {\n              injectedProviderIfExists = injectedWeb3IfExists.currentProvider;\n          } else {\n              return undefined;\n          }\n      }\n      if (injectedProviderIfExists) {\n          // Wrap Metamask in a compatibility wrapper as some of the behaviour\n          // differs\n          const networkId = await new Web3Wrapper(injectedProviderIfExists).getNetworkIdAsync();\n          const signerProvider =\n              injectedProviderIfExists.isMetaMask || injectedProviderIfExists.isToshi\n                  ? new MetamaskSubprovider(injectedProviderIfExists)\n                  : new SignerSubprovider(injectedProviderIfExists);\n          const provider = new Web3ProviderEngine();\n          provider.addProvider(signerProvider);\n          provider.addProvider(new RPCSubprovider(networkToRPCURI[networkId]));\n          provider.start();\n          const web3Wrapper = new Web3Wrapper(provider);\n          const contractWrappers = new ContractWrappers(provider, { networkId });\n          // Load all of the ABI's into the ABI decoder so logs are decoded\n          // and human readable\n          _.map(\n              [\n                  contractWrappers.exchange.abi,\n                  contractWrappers.erc20Token.abi,\n                  contractWrappers.etherToken.abi,\n                  contractWrappers.forwarder.abi,\n              ],\n              abi => web3Wrapper.abiDecoder.addABI(abi),\n          );\n          this.setState({ web3Wrapper, contractWrappers, web3: injectedProviderIfExists });\n      }\n  }\n\n\n  handleSignature(err, signed) {\n    if (!err) {\n      console.log(\"address\", address);\n      console.log(\"msg\", msg);\n      console.log(\"signed\", signed);\n\n      const fetchOpts = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ address, msg, signed })\n      };\n\n      fetch('/login', fetchOpts).then(res => {\n        if (res.status >= 200 && res.status <= 300) {\n          return res.json();\n        } else {\n          throw Error(res.statusText);\n        }\n      }).then(json => {\n        console.log(\"succeed\", json);\n        // Auth succeeded\n      }).catch(err => {\n        console.log(\"failed\", err);\n        // Auth failed\n      })\n    }\n  };\n\n  web3Login() {\n    address = web3.eth.accounts[0];\n\n    web3.personal.sign(msg, address, this.handleSignature);\n  }\n\n\n  render() {\n    if (!this.state || !this.state.contractWrappers || !this.state.web3Wrapper) {\n        return <div />;\n    }\n    return (\n        <div style={{ paddingLeft: 30, paddingRight: 30, paddingBottom: 30 }}>\n            <Nav web3Wrapper={this.state.web3Wrapper} />\n            <Content className=\"container\">\n                {this.state.web3 && (\n                    <div>\n                    <h1>react-web3-auth demo</h1>\n\n                    <button onClick={this.web3Login}>Login via Web3</button>\n\n                    </div>\n                )}\n                {!this.state.web3 && <InstallMetamask />}\n            </Content>\n            <Footer />\n        </div>\n    );\n  }\n}\n\nexport default Demo;\n","import * as React from 'react';\n\nexport class InstallMetamask extends React.Component {\n    render(): React.ReactNode {\n        return (\n            <div>\n                <h1> Please install Metamask </h1>\n                <a\n                    href=\"https://metamask.io/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    title=\"Metamask is required. Click to download.\"\n                >\n                    <img\n                        src=\"https://github.com/MetaMask/faq/raw/master/images/download-metamask-dark.png\"\n                        width=\"200px\"\n                        alt=\"Download Metamask\"\n                    />\n                </a>\n                <p> Once metamask is installed, please refresh this page </p>\n            </div>\n        );\n    }\n}\n","import { Navbar, NavbarBrand, NavbarItem, Tag } from 'bloomer';\nimport * as React from 'react';\n\n\nconst Network = {\n    Mainnet : 'Mainnet',\n    Ropsten : 'Ropsten',\n    Kovan : 'Kovan',\n    Rinkeby : 'Rinkeby',\n    Unknown : 'Unknown',\n}\nconst networkIdToNetwork = {\n    1: Network.Mainnet,\n    3: Network.Ropsten,\n    4: Network.Rinkeby,\n    42: Network.Kovan,\n    50: Network.Unknown,\n};\nexport class Nav extends React.Component<NavProps, NavState> {\n    state = { networkId: undefined };\n    constructor(props: NavProps) {\n        super(props);\n        void this.fetchNetworkDetailsAsync();\n    }\n\n    async fetchNetworkDetailsAsync() {\n        const { web3Wrapper } = this.props;\n        if (web3Wrapper) {\n            const networkId = await web3Wrapper.getNetworkIdAsync();\n            if (networkId !== this.state.networkId) {\n                this.setState({ networkId });\n            }\n        }\n    }\n    renderNetworkIndicator(): React.ReactNode {\n        const { networkId } = this.state;\n        if (networkId) {\n            const networkName = networkIdToNetwork[networkId] || Network.Unknown;\n            if (networkName === Network.Unknown || networkName === Network.Mainnet) {\n                return <Tag isColor=\"warning\">{networkName} - Please connect to a test network</Tag>;\n            }\n            return <Tag isColor=\"primary\">{networkName}</Tag>;\n        }\n        return <Tag isColor=\"danger\">Disconnected</Tag>;\n    }\n    render(): React.ReactNode {\n        const networkRender = this.renderNetworkIndicator();\n        return (\n            <Navbar style={{ zIndex: -1 }}>\n                <NavbarBrand>\n                    <NavbarItem>\n                        <strong> Network Status </strong>\n                        <NavbarItem>{networkRender}</NavbarItem>\n                    </NavbarItem>\n                </NavbarBrand>\n            </Navbar>\n        );\n    }\n}\n","import { Component } from 'react';\n\nclass ComponentWithReactWeb3Auth extends Component {\n\n    constructor(props) {\n      super(props);\n    }\n\n    componentDidUpdate() {\n    }\n\n    async componentDidMount() {\n      console.log(this.constructor.name + \" componentDidMount\");\n    }\n\n    render() {\n      return null;\n    }\n}\n\n\n\nexport default ComponentWithReactWeb3Auth;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Demo from './Demo';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(\n  <Demo\n    // sampleProp={sampleProp}\n  />, document.getElementById('root'));\n"],"sourceRoot":""}